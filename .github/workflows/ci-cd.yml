name: ci/cd workflow

on:
  push:
    branches:
      - main
      - features/*
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    services:
      # mysql-service Label used to access the service container
      mysql:
        # Docker Hub image (also with version)
        image: mysql:5.7
        env:
          ## Accessing to Github secrets, where you can store your configuration
          MYSQL_ROOT_PASSWORD: 1234
          MYSQL_DATABASE: laravel
        ## map the "external" 3306 port with the "internal" 3306
        ports:
          - 3306:3306
        # Set health checks to wait until mysql database has started (it takes some seconds to start)
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3    
    strategy:
      matrix:
        php: [7.3, 7.4]

    name: Test - PHP ${{ matrix.php }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Cache PHP dependencies
        uses: actions/cache@v1
        with:
          path: vendor
          key: dependencies-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.lock') }}

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php }}
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, gd
          coverage: none

      - name: Copy ENV Laravel Configuration for CI
        run: php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install dependencies
        run: composer install --no-ansi --no-interaction --no-scripts --no-suggest --no-progress --prefer-dist

      - name: Generate key
        run: php artisan key:generate

      - name: Execute tests
        run: vendor/bin/phpunit --verbose

  deploy:
    image:  ruby:latest
    stage:  deploy
    before_script:
      - git config  --global  user.email  "jecl6386@hotmail.com"
      - git config  --global  user.name  "Jonathan Colorado"
      - git add composer.lock composer.json
      - git commit  -m  "add  composer lock"
      - gem install dpl
    script:
      - dpl --provider=heroku --app=${{ secrets.HEROKU_APP_NAME }}  --api-key=${{ secrets.KEY }}
    only:
      - main